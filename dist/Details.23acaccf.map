{"version":3,"sources":["Carousel.js","Modal.js","Details.js"],"names":["Carousel","state","photos","active","handleIndexClick","setState","e","target","dataset","index","value","map","photo","media","filter","React","Component","modalRoot","document","getElementById","Modal","props","el","createElement","appendChild","removeChild","children","petfinder","key","secret","loading","LoadableContent","loader","then","module","AdoptModalContent","Details","showModal","toggleModal","pet","get","output","id","data","breed","Array","isArray","breeds","join","name","animal","location","contact","city","description","catch"],"mappings":"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","file":"Details.23acaccf.map","sourceRoot":"..\\src","sourcesContent":["import React from \"react\";\r\n\r\nexport class Carousel extends React.Component {\r\n  state = {\r\n    photos: [],\r\n    active: 0\r\n  };\r\n\r\n  static getDerivedStateFromProps({ media }) {\r\n    let photos = [];\r\n\r\n    if (media && media.photos && media.photos.photo) {\r\n      photos = media.photos.photo.filter(photo => photo[\"@size\"] === \"pn\");\r\n    }\r\n\r\n    return { photos };\r\n  }\r\n\r\n  handleIndexClick = e => {\r\n    this.setState({\r\n      active: +e.target.dataset.index\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { photos, active } = this.state;\r\n\r\n    return (\r\n      <div className=\"carousel\">\r\n        <img src={photos[active].value} alt=\"primary animal\" />\r\n        <div className=\"carousel-smaller\">\r\n          {photos.map((photo, index) => (\r\n            /* eslint-disable-next-line */\r\n            <img\r\n              key={photo.value}\r\n              data-index={index}\r\n              src={photo.value}\r\n              className={index === active ? \"active\" : \"\"}\r\n              alt=\"animal thumbnail\"\r\n              onClick={e => this.handleIndexClick(e)}\r\n            />\r\n          ))}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { createPortal } from \"react-dom\";\r\n\r\nconst modalRoot = document.getElementById(\"modal\");\r\n\r\nexport class Modal extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.el = document.createElement(\"div\");\r\n  }\r\n\r\n  componentDidMount() {\r\n    modalRoot.appendChild(this.el);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    modalRoot.removeChild(this.el);\r\n  }\r\n\r\n  render() {\r\n    return createPortal(this.props.children, this.el);\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport pf from \"petfinder-client\";\r\nimport { navigate } from \"@reach/router\";\r\nimport Loadable from \"react-loadable\";\r\n\r\nimport { Carousel } from \"./Carousel\";\r\nimport { Modal } from \"./Modal\";\r\n\r\nconst petfinder = pf({\r\n  key: process.env.API_KEY,\r\n  secret: process.env.API_SECRET\r\n});\r\n\r\nconst loading = () => <h1>loading content</h1>;\r\n\r\nconst LoadableContent = Loadable({\r\n  loader: () =>\r\n    import(\"./AdoptModalContent\").then(module => module.AdoptModalContent),\r\n  loading\r\n});\r\n\r\nexport class Details extends React.Component {\r\n  state = {\r\n    loading: true,\r\n    showModal: false\r\n  };\r\n\r\n  toggleModal = () => {\r\n    this.setState({ showModal: !this.state.showModal });\r\n  };\r\n\r\n  componentDidMount() {\r\n    petfinder.pet\r\n      .get({\r\n        output: \"full\",\r\n        id: this.props.id\r\n      })\r\n      .then(data => {\r\n        const pet = data.petfinder.pet;\r\n\r\n        let breed;\r\n        if (Array.isArray(pet.breeds.breed)) {\r\n          breed = pet.breeds.breed.join(\", \");\r\n        } else {\r\n          breed = pet.breeds.breed;\r\n        }\r\n\r\n        this.setState({\r\n          name: pet.name,\r\n          animal: pet.animal,\r\n          location: `${pet.contact.city}, ${pet.contact.state}`,\r\n          description: pet.description,\r\n          media: pet.media,\r\n          breed,\r\n          loading: false\r\n        });\r\n      })\r\n      .catch(() => {\r\n        navigate(\"/\");\r\n      });\r\n  }\r\n\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <h1>Loading...</h1>;\r\n    }\r\n    const {\r\n      name,\r\n      animal,\r\n      location,\r\n      description,\r\n      breed,\r\n      media,\r\n      showModal\r\n    } = this.state;\r\n    return (\r\n      <div className=\"details\">\r\n        <Carousel media={media} />\r\n        <div>\r\n          <h1>{name}</h1>\r\n          <h2>\r\n            {animal} - {breed} - {location}\r\n          </h2>\r\n          <button onClick={this.toggleModal}>Adopt {name}</button>\r\n          <p>{description}</p>\r\n\r\n          {showModal ? (\r\n            <Modal>\r\n              <LoadableContent toggleModal={this.toggleModal} name={name} />\r\n            </Modal>\r\n          ) : null}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]}