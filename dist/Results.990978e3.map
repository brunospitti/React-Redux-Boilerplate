{"version":3,"sources":["Pet.js","Results.js"],"names":["Pet","props","name","animal","breed","media","location","id","photos","photo","filter","hero","value","React","Component","petfinder","key","secret","Results","state","pets","search","pet","find","output","then","data","Array","isArray","setState","map","breeds","join","contact","city","mapStateToProps"],"mappings":"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","file":"Results.990978e3.map","sourceRoot":"..\\src","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"@reach/router\";\r\n\r\nexport class Pet extends React.Component {\r\n  render() {\r\n    const { name, animal, breed, media, location, id } = this.props;\r\n    let photos = [];\r\n    if (media && media.photos && media.photos.photo) {\r\n      photos = media.photos.photo.filter(photo => photo[\"@size\"] === \"pn\");\r\n    }\r\n\r\n    const hero = photos[0] ? photos[0].value : \"http://placecorgi.com/300/300\";\r\n\r\n    return (\r\n      <Link to={`/details/${id}`} className=\"pet\">\r\n        <div className=\"image-container\">\r\n          <img src={hero} alt={name} />\r\n        </div>\r\n        <div className=\"info\">\r\n          <h1>{name}</h1>\r\n          <h2>\r\n            {animal} - {breed} - {location}\r\n          </h2>\r\n        </div>\r\n      </Link>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport pf from \"petfinder-client\";\r\n\r\nimport { Pet } from \"./Pet\";\r\nimport SearchBox from \"./SearchBox\";\r\n\r\nconst petfinder = pf({\r\n  key: process.env.API_KEY,\r\n  secret: process.env.API_SECRET\r\n});\r\n\r\nclass Results extends React.Component {\r\n  state = {\r\n    pets: []\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.search();\r\n  }\r\n\r\n  search = () => {\r\n    petfinder.pet\r\n      .find({\r\n        output: \"full\",\r\n        location: this.props.location,\r\n        animal: this.props.animal,\r\n        breed: this.props.breed\r\n      })\r\n      .then(data => {\r\n        let pets;\r\n        if (data.petfinder.pets && data.petfinder.pets.pet) {\r\n          if (Array.isArray(data.petfinder.pets.pet)) {\r\n            pets = data.petfinder.pets.pet;\r\n          } else {\r\n            pets = [data.petfinder.pets.pet];\r\n          }\r\n        } else {\r\n          pets = [];\r\n        }\r\n\r\n        this.setState({ pets });\r\n      });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"search\">\r\n        <SearchBox search={this.search} />\r\n        {this.state.pets.map(pet => {\r\n          let breed;\r\n\r\n          if (Array.isArray(pet.breeds.breed)) {\r\n            breed = pet.breeds.breed.join(\", \");\r\n          } else {\r\n            breed = pet.breeds.breed;\r\n          }\r\n\r\n          return (\r\n            <Pet\r\n              key={pet.id}\r\n              id={pet.id}\r\n              name={pet.name}\r\n              animal={pet.animal}\r\n              breed={breed}\r\n              media={pet.media}\r\n              location={`${pet.contact.city}, ${pet.contact.state}`}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ location, breed, animal }) => ({\r\n  location,\r\n  breed,\r\n  animal\r\n});\r\n\r\nexport default connect(mapStateToProps)(Results);\r\n"]}